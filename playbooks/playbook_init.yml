---
# Copyright 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Create an admin user

- name: Create monitoring user 
  hosts: utility[0]
  become: true
  become_user: root
  tasks:
    - name: Ensure monitoring user
      keystone:
        command: "ensure_user"
        endpoint: "{{ keystone_service_adminurl }}"
        login_user: "{{ keystone_admin_user_name }}"
        login_password: "{{ keystone_auth_admin_password }}"
        login_project_name: "{{ keystone_admin_tenant_name }}"
        user_name: "{{ monitoring_user_name }}"
        tenant_name: "{{ monitoring_tenant_name }}"
        password: "{{ monitoring_user_password_secret }}"
        insecure: "{{ keystone_service_adminuri_insecure }}"
      register: add_service
      until: add_service is succeeded
      retries: 5
      delay: 10
      no_log: true

      # Add a role to the user
    - name: Ensure monitoring user to admin role
      keystone:
        command: "ensure_user_role"
        endpoint: "{{ keystone_service_adminurl }}"
        login_user: "{{ keystone_admin_user_name }}"
        login_password: "{{ keystone_auth_admin_password }}"
        login_project_name: "{{ keystone_admin_tenant_name }}"
        user_name: "{{ monitoring_user_name }}"
        tenant_name: "{{ monitoring_tenant_name }}"
        role_name: "{{ monitoring_user_role_name }}"
        insecure: "{{ keystone_service_adminuri_insecure }}"
      register: add_service
      until: add_service is succeeded
      retries: 5
      delay: 10
      no_log: true

- name: Configure RabbitMQ for monitoring user
  hosts: rabbitmq[0]
  become: true
  become_user: root
  tasks:
    - name: Configure Rabbitmq vhost for sensu
      rabbitmq_vhost:
        name: "{{ sensu_rabbitmq_vhost }}"
        state: "present"
    - name: Configure Rabbitmq user for sensu
      rabbitmq_user:
        user: "{{ sensu_rabbitmq_user_name }}"
        password: "{{ sensu_rabbitmq_user_password }}"
        vhost: "{{ sensu_rabbitmq_vhost }}"
        configure_priv: ".*"
        read_priv: ".*"
        write_priv: ".*"
        state: "present"
      no_log: True
    - name: Collect list of rabbitmq vhosts
      shell: "rabbitmqctl list_vhosts"
      register: rabbitmq_vhosts
      changed_when: false
    - name: attribute permissions for monitoring user on rabbitmq vhosts
      shell: 'rabbitmqctl set_permissions -p {{ item }} monitoring "^$" ".*" "^$" '
      with_items: "{{ rabbitmq_vhosts.stdout_lines | select('match', '^(/)') | list }}"
