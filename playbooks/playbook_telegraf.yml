---
# Copyright 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install and configure Telegraf
  hosts: "all"
  gather_facts: true
  become: true
  become_user: root
  environment: "{{ deployment_environment_variables | default({}) }}"

  pre_tasks:
    - include_tasks: "/opt/openstack-ansible/playbooks/common-tasks/os-{{ container_tech | default('lxc') }}-container-setup.yml"
      when:
        - "inventory_hostname in groups['all_containers']"
    - include_tasks: /opt/openstack-ansible/playbooks/common-tasks/os-log-dir-setup.yml
      vars:
        log_dirs:
          - src: "/openstack/log/{{ inventory_hostname }}-telegraf"
            dest: "{{ telegraf_logs_dir }}"
    - include_tasks: /opt/openstack-ansible/playbooks/common-tasks/package-cache-proxy.yml
#    - include_tasks: tasks/create_telegraf_ceph_key.yml
#      when:
#        - "'ceph-mon' in group_names"
#        - "groups['ceph-mon'] | length > 0"
  
  roles:
    - role: telegraf
      tags: [telegraf-install]
    - role: "rsyslog_client"
      rsyslog_client_log_rotate_file: telegraf_log_rotate
      rsyslog_client_log_dir: "{{ telegraf_logs_dir }}"
      rsyslog_client_config_name: "99-telegraf-rsyslog-client.conf"
      tags: [telegraf-rsyslog]
  
  post_tasks:
    # Use post tasks to install plugins
   - include_tasks: ./tasks/create_telegraf_ceph_key.yml
     when:
       - "'ceph-mon' in group_names"
     tags: [telegraf-ceph]
  
   - name: telegraf-configure | Plugins configuration
     template:
       src: "../templates/telegraf/{{ item }}.conf.j2"
       dest: "{{ telegraf_plugins_prefix }}/{{ item }}.conf"
     with_items: "{{ telegraf_plugins_list }}"
     notify: telegraf restart
     tags: [telegraf-plugins, always]
  
  handlers:
    - name: telegraf restart
      service: name=telegraf state=restarted